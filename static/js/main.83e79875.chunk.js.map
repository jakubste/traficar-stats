{"version":3,"sources":["components/DayHourHeatmap.js","components/PerYear.js","Stats.js","App.js","serviceWorker.js","index.js"],"names":["window","Highcharts","DayHourHeatmap","dates","this","props","console","log","data","forEach","dateString","date","Date","day","getDay","timeOfDay","Math","floor","getHours","chartData","t","d","push","options","chart","type","marginTop","marginBottom","plotBorderWidth","title","text","xAxis","categories","yAxis","reversed","colorAxis","min","minColor","maxColor","legend","align","layout","margin","verticalAlign","y","symbolHeight","tooltip","formatter","series","point","x","value","name","borderWidth","dataLabels","enabled","color","react_default","a","createElement","Fragment","Typography_default","variant","highcharts_react_min_default","highcharts","addHeatmapModule","Component","withStyles","PerYear","perYear","res","year","startDate","getFullYear","price","Object","keys","map","inline","round","Stats","_this$props","classes","Grid_default","container","Hidden_default","smDown","item","md","sm","className","child","direction","totalAmount","totalKm","reservations","km","reduce","b","totalMinutes","components_DayHourHeatmap","filter","status","components_PerYear","flexGrow","padding","App","state","displayStats","onDataChange","e","target","_this","setState","handleClick","JSON","parse","src_Stats","CssBaseline_default","href","rel","TextField_default","jsonInput","multiline","rows","id","onChange","Button_default","button","onClick","width","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83e79875.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport addHeatmapModule from 'highcharts/modules/heatmap'\nimport Typography from '@material-ui/core/Typography'\n\n\nwindow['Highcharts'] = Highcharts;\n\nconst styles = {}\n\nclass DayHourHeatmap extends Component {\n\n\n  render() {\n\n    const dates = this.props.dates\n\n    console.log(dates)\n\n    const data = [\n      [0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0],\n    ]\n\n    dates.forEach(dateString => {\n      const date = new Date(dateString)\n      const day = (date.getDay() + 6) % 7  // 0 is Sunday\n      const timeOfDay = Math.floor(date.getHours() / 6)\n      data[timeOfDay][day] += 1\n    })\n\n    const chartData = []\n    for (let t = 0; t < 4; t++) {\n      for (let d = 0; d < 7; d++) {\n         chartData.push([d, t, data[t][d]])\n      }\n    }\n\n    const options = {\n      chart: {\n        type: 'heatmap',\n        marginTop: 40,\n        marginBottom: 80,\n        plotBorderWidth: 1\n      },\n\n      title: {\n        text: 'Użycie w tygodniu'\n      },\n\n      xAxis: {\n        categories: ['Poniedziałek', 'Wtorek', 'Środa', 'Czwartek', 'Piątek', 'Sobota', 'Niedziela',]\n      },\n\n      yAxis: {\n        categories: ['Rano (0-6)', 'Przedpołudnie (6-12)', 'Popołudnie (12-18)', 'Wieczór (18-24)'],\n        reversed: true,\n        title: false\n      },\n\n      colorAxis: {\n        min: 0,\n        minColor: '#FFFFFF',\n        maxColor: \"#941f91\",\n        reversed: false,\n      },\n\n      legend: {\n        align: 'right',\n        layout: 'vertical',\n        margin: 0,\n        verticalAlign: 'top',\n        y: 25,\n        symbolHeight: 280\n      },\n\n      tooltip: {\n        formatter: function () {\n          return '<b>' + this.series.xAxis.categories[this.point.x] + '</b><br><b>' +\n            this.series.yAxis.categories[this.point.y] + '</b> <br><b>' + this.point.value + '</b> przejazdów';\n        }\n      },\n\n      series: [{\n        name: 'Reservations per time of day',\n        borderWidth: 1,\n        data: chartData,\n        dataLabels: {\n          enabled: true,\n          color: '#000000'\n        }\n      }]\n\n    }\n\n    return (\n      <>\n        <Typography variant=\"h6\">Kiedy jeździłeś?</Typography>\n\n        <HighchartsReact\n          highcharts={addHeatmapModule(Highcharts)}\n          options={options}\n        />\n      </>\n    )\n\n  }\n}\n\nexport default withStyles(styles)(DayHourHeatmap)","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nconst styles = {}\n\nclass PerYear extends Component {\n\n\n  render() {\n\n    const { data } = this.props\n\n    const perYear = {}\n\n    data.forEach(res => {\n      const year = (new Date(res.startDate)).getFullYear()\n      if (!perYear[year]) {\n        perYear[year] = 0\n      }\n      perYear[year] = perYear[year] + res.price\n    })\n\n    return (\n      <>\n        <Typography variant=\"h6\">Rocznie wydałeś:</Typography>\n        {Object.keys(perYear).map(year => (\n          <div>\n            <Typography variant=\"body2\n            \" inline>{year}</Typography>: <Typography inline>{Math.round(perYear[year])} zł</Typography>\n          </div>\n        ))}\n      </>\n    )\n\n  }\n}\n\nexport default withStyles(styles)(PerYear)\n","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Hidden from '@material-ui/core/Hidden'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport DayHourHeatmap from './components/DayHourHeatmap'\nimport PerYear from './components/PerYear'\n\nconst styles = {\n  child: {\n    flexGrow: 1,\n    padding: 5,\n  },\n}\n\nclass Stats extends Component {\n\n\n  render() {\n\n    const { classes, data } = this.props\n\n    return (\n      <Grid container>\n        <Hidden smDown>\n          <Grid item md={2} />\n        </Hidden>\n        <Grid item md={8} sm={12} className={classes.child}>\n          <Grid container direction=\"column\">\n            <Grid item className={classes.child}>\n              <Typography>Ogółem rezerwacji: {data.totalAmount}</Typography>\n              <Typography>Przejechałeś {Math.round(data.totalKm, 2)} km</Typography>\n              <Typography>Zapłaciłeś za {data.reservations.map(res => res.km).reduce((a, b) => a + b)} km</Typography>\n              <Typography>\n                Zapłaciłeś za: {' '}\n                {Math.floor(data.totalMinutes / 60 / 24)}d {' '}\n                {Math.floor(data.totalMinutes / 60) % 24}h {' '}\n                {Math.floor(data.totalMinutes % 60)}min\n              </Typography>\n            </Grid>\n            <Grid item className={classes.child}>\n              <DayHourHeatmap\n                dates={data.reservations.filter(res => res.status === 'ENDED').map(res => res.startDate)} />\n            </Grid>\n            <Grid item className={classes.child}>\n              <PerYear data={data.reservations.filter(res => res.status === 'ENDED')} />\n            </Grid>\n\n          </Grid>\n        </Grid>\n      </Grid>\n    )\n\n  }\n}\n\nexport default withStyles(styles)(Stats)\n","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport Hidden from '@material-ui/core/Hidden'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport Stats from './Stats'\n// import { exampleData } from './data'\n\nconst styles = {\n  jsonInput: {\n    width: \"calc(100% - 40px)\",\n    margin: 20,\n  },\n  button: {\n    margin: 20,\n  }\n}\n\nclass App extends Component {\n\n  state = {\n    data: null,\n    displayStats: false,\n  }\n\n  onDataChange = (e) => {\n    console.log(e.target)\n    this.setState({\n      data: e.target.value\n    })\n  }\n\n  handleClick = (e) => {\n    if (this.state.data && JSON.parse(this.state.data)) {\n      this.setState({\n        displayStats: true\n      })\n    }\n  }\n\n  render() {\n\n    const { classes } = this.props\n\n    if (this.state.displayStats) {\n      return <Stats data={JSON.parse(this.state.data)} />\n    }\n\n    return (\n      <>\n        <CssBaseline />\n        <Grid container>\n          <Hidden smDown>\n            <Grid item md={2} />\n          </Hidden>\n          <Grid item md={8}>\n\n            <Typography variant=\"h6\">\n              <ol>\n                <li>\n                  Zaloguj się na stronie{' '}\n                  <a href=\"https://traficar.pl\" target=\"_blank\"\n                     rel=\"noopener noreferrer\">Traficara</a></li>\n                <li>\n                  Otwórz w przeglądarce stronę{' '}\n                  <a href=\"https://api.traficar.pl/eaw-rest-api/reservation\" target=\"_blank\"\n                     rel=\"noopener noreferrer\">https://api.traficar.pl/eaw-rest-api/reservation</a>{' '}\n                  i wklej jej zawartość poniżej:\n                </li>\n              </ol>\n            </Typography>\n            <TextField className={classes.jsonInput} multiline rows={8} id=\"reservations\" onChange={this.onDataChange} />\n            <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.handleClick}>Wygeneruj ładne rzeczy</Button>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}